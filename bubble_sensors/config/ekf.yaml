ekf_filter_node:
  ros__parameters:
      # Declare the frequency of the EKF update
      frequency: 40.0

      two_d_mode: false

      publish_tf: false
      smooth_lagged_data: true
      history_length: 1.0
      publish_acceleration: true

      print_diagnostics: true

      map_frame: map_ned
      odom_frame: odom_ned
      base_link_frame: base_link_frd
      world_frame: map_ned

      # When declaring parameters, do it in the following way:
      # Declare the sensor by the type of message you're receiving(odom, imu, twist)
      # odomi: /name/of/topic
      # next define which data you'll be reading from it:
      # odomi_config = [x_pos, y_pos, z_pos,
      #                 roll, pitch, yaw,
      #                 x_vel, y_vel, z_vel,
      #                 roll_vel, pitch_vel, yaw_vel
      #                 x_accel, y_accel, z_accel]
      # Each of which gets a boolean value

      # Setting initial state manually for testing
      initial_state: [0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0,
                      0.0, 0.0, 0.0]

      process_noise_covariance: [
        1e-2, 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,0.0,0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    1e-2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    1e-2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    1e-4, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    1e-4, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    1e-4, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-3, 0.0,    0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-3, 0.0,    0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e-3, 0.0,    0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e3, 0.0,    0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e3, 0.0,
        0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    1e3]

      # Only use output z from mavros, since they have high-quality z prediction from barometer
      odom0: /mavros/local_position/odom
      odom0_config: [false, false, true,
                       false, false, false,
                       false, false, false,
                       false, false, false,
                       false, false, false]

      # now configure the data coming from the DVL
      twist0: /dvl/twist_data
      twist0_config: [false, false, false,
                      false, false, false,
                      true, true, true,
                      false, false, false,
                      false, false, false]

      #Now configure the data coming from the vectornav IMU
      pose0: /vectornav/filtered_orientation
      pose0_config: [false, false, false,
                      true, true, true,
                      false, false, false,
                      false, false, false,
                      false, false, false]

      imu0: /vectornav/Imu_body
      imu0_config: [false, false, false,
                      false, false, false,
                      false, false, false,
                      true, true, true,
                      true, true, true]

      # Add the sensor output from mavros
      # imu1: /mavros/imu/data_comped
      # imu1_config: [false, false, false,
      #                 false, false, false,
      #                 false, false, false,
      #                 true, true, true,
      #                 true, true, true]

      # pose1: /mavros/local_position/pose_cov
      # pose1_config: [true, true, false,
      #                false, false, false,
      #                false, false, false,
      #                false, false, false,
      #                false, false, false]
